server:
  port: 8085

spring:
  application:
    name: reactive-sample-project
  cloud:
    stream:
      default-binder: rabbit
      binders:
        rabbit:
          type: rabbit
      function:
        definition: notifyEvent;articleStatus
      rabbit:
        bindings:
          articleStatus-in-0:
            consumer:
              exchange-type: direct
              binding-routing-key: article-status
              transacted: true
              auto-bind-dlq: true
              dead-letter-queue-name: "article.article-status.dlq"
          notifyEvent-in-0:
            consumer:
              exchange-type: direct
              binding-routing-key: notify-event
              transacted: true
              auto-bind-dlq: true
              dead-letter-queue-name: "article.notify-event.dlq"
          article-check-out-0:
            producer:
              exchange-type: direct
              binding-routing-key: article-check
              routing-key-expression: '"article-check"'
      bindings:
        notifyEvent-in-0:
          group: notify-event
          destination: article
          consumer:
            max-attempts: 3
        articleStatus-in-0:
          group: article-status
          destination: article
          consumer:
            max-attempts: 3
        article-check-out-0:
          destination: article

article-app:
  fetch-data-before: 7
  scheduler:
    article-check-daily: 0 0 0 * * ?
    article-check-monthly: 0 0 0 1 * ?
  check-articles-interval-days: 2
  unprotected-patterns:
    - /api/v1/weekly
    - /api/v1/get-by-id
    - /api/v1/all
  security-constraints:
    - roles:
        - USER
      security-collections:
        - patterns:
            - /api/v1/edit
            - /api/v1/create
            - /api/v1/remove/*

springdoc:
  server-urls:
    - http://localhost:8085

reactive:
  fetch-data-before: 7
  scheduler:
    article-check-daily: 0 0 0 * * ?
    article-check-monthly: 0 0 0 1 * ?
  check-articles-interval-days: 2

